apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'

def storePw = hasProperty('RELEASE_STORE_PASSWORD') ? RELEASE_STORE_PASSWORD : System.getenv('RELEASE_STORE_PASSWORD')
def keyPw = hasProperty('RELEASE_KEY_PASSWORD') ? RELEASE_KEY_PASSWORD : System.getenv('RELEASE_KEY_PASSWORD')

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")
    signingConfigs {
        release {
            storeFile file('../pietsmiet_android.jks')
            storePassword storePw
            keyAlias 'l3d00mandroidkey'
            keyPassword keyPw
        }
    }
    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

        applicationId globalConfiguration.getAt("androidApplicationId")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue "string", "app_name", "PietSmiet Community App"
        }
        debug {
            resValue "string", "app_name", "Pietsmiet " + gitBranch()
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile project(':data')
    compile project(':domain')

    def supportLibraryVersion = rootProject.ext.supportLibraryVersion
    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:design:${supportLibraryVersion}"
    compile "com.android.support:cardview-v7:${supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    compile "com.android.support:customtabs:${supportLibraryVersion}"

    def firebaseLibraryVersion = rootProject.ext.firebaseLibraryVersion
    compile "com.google.firebase:firebase-core:${firebaseLibraryVersion}"
    compile "com.google.firebase:firebase-messaging:${firebaseLibraryVersion}"
    compile "com.google.firebase:firebase-crash:${firebaseLibraryVersion}"
    compile "com.google.firebase:firebase-config:${firebaseLibraryVersion}"
    compile "com.google.firebase:firebase-perf:${firebaseLibraryVersion}"

    compile 'io.reactivex:rxjava:1.3.4'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'

    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    compile 'com.mikepenz:aboutlibraries:6.0.2'

    compile 'com.github.bumptech.glide:glide:4.5.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.5.0'
    compile('com.github.bumptech.glide:recyclerview-integration:4.5.0') {
        // Excludes the support library because it's already included by Glide.
        transitive = false
    }

    debugCompile 'com.facebook.stetho:stetho:1.5.0'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    testCompile 'org.robolectric:robolectric:3.6.1'
    testCompile 'org.mockito:mockito-core:2.12.0'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.9.1'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.4-atlassian-1'
    testCompile 'junit:junit:4.12'
    testCompile 'org.json:json:20171018'
    testCompile 'commons-io:commons-io:20030203.000550'
}
// http://stackoverflow.com/a/42095944/4026792
def gitBranch() {
    try {
        def branch = ""
        def proc = "git rev-parse --abbrev-ref HEAD".execute()
        proc.in.eachLine { line -> branch = line }
        proc.err.eachLine { line -> println line }
        proc.waitFor()
        branch
    } catch (ignored) {
        return ""
    }
}

apply plugin: 'com.google.gms.google-services'
